package org.example

// 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î data class ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
data class Product(val name: String, val price: Double, val category: String)

fun main() {
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (List<Product>)
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "Laptop", price = 35000.0, category = "Electronics"
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "Smartphone", price = 25000.0, category = "Electronics"
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "T-shirt", price = 450.0, category = "Apparel"
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "Monitor", price = 7500.0, category = "Electronics"
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "Keyboard", price = 499.0, category = "Electronics" // ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 500
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "Jeans", price = 1200.0, category = "Apparel"
    // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ name = "Headphones", price = 1800.0, category = "Electronics" // ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
//üö®
    val products = listOf(
        Product("laptop", 35000.0, "Electronics"),
        Product("SmartPhone", 25000.0, "Electronics"),
        Product("T-Shirt", 450.0, "Apparel"),
        Product("Monitor", 7500.0, "Electronics"),
        Product("Keyboard", 499.0, "Electronics"),
        Product("Jeans", 1200.0, "Apparel"),
        Product("Headphones", 1800.0, "Electronics"),
    )


    println("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:")
products.forEach { println(it) }
    println("--------------------------------------------------")

    // --- ‡πÇ‡∏à‡∏ó‡∏¢‡πå: ‡∏à‡∏á‡∏´‡∏≤‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î 'Electronics' ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 500 ‡∏ö‡∏≤‡∏ó ---

    // 3. ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Chaining ‡∏Å‡∏±‡∏ö List ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏ß‡∏î Electronics
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 500
    // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô List<Double>
    // ‡∏´‡∏≤‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤
//üö®
    val totalElecPriceOver500 = products.filter {it.category == "Electronics" && it.price > 500}.map{it.price}.fold(0.0) {acc, i -> acc + i}

    println("‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ Chaining ‡∏Å‡∏±‡∏ö List")
    println("‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Electronics ‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏Ñ‡∏≤ > 500 ‡∏ö‡∏≤‡∏ó: $totalElecPriceOver500 ‡∏ö‡∏≤‡∏ó")
    println("--------------------------------------------------")


    // 4. (‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á) ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ .asSequence() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
    // ‡πÅ‡∏õ‡∏•‡∏á List ‡πÄ‡∏õ‡πá‡∏ô Sequence ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
//üö®
    val totalElecPriceOver500Sequence = products.asSequence()
        .filter {it.category == "Electronics" && it.price > 500}
        .map { it.price }.fold(0.0) {acc, i -> acc + i}

    println("‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ .asSequence() (‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á)")
    println("‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Electronics ‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏Ñ‡∏≤ > 500 ‡∏ö‡∏≤‡∏ó: $totalElecPriceOver500Sequence ‡∏ö‡∏≤‡∏ó")
    println("--------------------------------------------------")


    println("‡∏≠‡∏†‡∏¥‡∏õ‡∏£‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á List ‡πÅ‡∏•‡∏∞ Sequence:")
    println("1. List Operations (‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1):")
    println("   - ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ operation (‡πÄ‡∏ä‡πà‡∏ô filter, map) ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Collection (List) ‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ç‡∏≠‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ")
    println("   - ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: filter ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á List ‡πÉ‡∏´‡∏°‡πà -> filter ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á List ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡πÉ‡∏ö -> map ‡∏™‡∏£‡πâ‡∏≤‡∏á List ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ -> sum ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
    println("   - ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏°‡∏≤‡∏Å (‡∏•‡πâ‡∏≤‡∏ô records) ‡∏à‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏õ‡∏•‡∏∑‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Collection ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô")
    println()
    println("2. Sequence Operations (‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2):")
    println("   - ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏ö‡∏ö 'Lazy' (‡∏ó‡∏≥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡πÜ)")
    println("   - operations ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (filter, map) ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÑ‡∏ß‡πâ")
    println("   - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô (each element) ‡∏à‡∏∞‡πÑ‡∏´‡∏•‡∏ú‡πà‡∏≤‡∏ô Pipeline ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô ‡∏à‡∏ô‡∏à‡∏ö‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£")
    println("   - ‡πÄ‡∏ä‡πà‡∏ô: 'Laptop' ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å filter category -> filter price -> map price ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô 'Smartphone' ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô")
    println("   - ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Collection ‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏≤‡∏á ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß")
    println("   - ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ 'Terminal Operation' ‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ .sum())")

    println("\n----‡πÅ‡∏ö‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤----")

    val groupProducts = products.groupBy {
        when {
            it.price <= 1000.0 -> "‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 1,000 ‡∏ö‡∏≤‡∏ó"
            it.price > 1000.0 && it.price < 10000.0 -> "‡∏£‡∏≤‡∏Ñ‡∏≤ 1,000 - 9,000"
            else -> "‡∏£‡∏≤‡∏Ñ‡∏≤ 10,000  ‡∏ö‡∏≤‡∏ó‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ"
        }
    }

    groupProducts.forEach { (range, productlist) ->
        println("\n‡∏Å‡∏•‡∏∏‡πà‡∏° : $range")
        if (productlist.isEmpty()) {
            println("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")
            } else {
                productlist.forEach { product ->
                    println(" - ${product.name} (‡∏£‡∏≤‡∏Ñ‡∏≤ : ${"%.2f".format(product.price)} ‡∏ö‡∏≤‡∏ó) ")
                }
        }


    }
}